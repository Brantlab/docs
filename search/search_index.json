{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to BrantLab Docs","text":"<p>This is a place where I try to get my thoughts and projects down on paper. Some instruction may be incomplete. Enter at your own risk and hopefully not fall down the rabbit holes that I seem to find. </p>"},{"location":"#to-do-list","title":"To Do List","text":"<ul> <li>Make MDdocs deploy via github pages</li> <li>Get googleddns container to auto start</li> </ul>"},{"location":"#wish-list-of-projects","title":"Wish list of projects","text":"<ul> <li>Update to ESXI/VCSA 7.0  </li> <li>Deploy Tactical RMM for home machines  </li> <li>Blog some more  </li> </ul>"},{"location":"#stuff-missing-in-docs","title":"Stuff Missing in Docs","text":"<ul> <li>Nginx Proxy Manager</li> <li>Portainer</li> <li>PHPIPAM</li> </ul>"},{"location":"Docker/","title":"Systems in Docker (Hipster VM's)","text":"<p>These are the systems I have in docker currently. </p> <p>As of 3/19/21 <pre><code>CONTAINER ID        IMAGE                             COMMAND                  CREATED             STATUS                PORTS                                            NAMES\ncd82e35b7354        squidfunk/mkdocs-material         \"mkdocs serve --dev-\u2026\"   10 minutes ago      Up 10 minutes         0.0.0.0:8001-&gt;8000/tcp                           pensive_wilson\n17e971404544        cwmr/google-domains-ddns          \"./google-domains-dd\u2026\"   46 hours ago        Up 46 hours                                                            elegant_jackson\n7851b046ffb1        ghcr.io/linuxserver/code-server   \"/init\"                  47 hours ago        Up 9 seconds          0.0.0.0:8443-&gt;8443/tcp                           code-server\nb30dc504e927        jc21/nginx-proxy-manager:latest   \"/init\"                  2 days ago          Up 2 days (healthy)   0.0.0.0:80-81-&gt;80-81/tcp, 0.0.0.0:443-&gt;443/tcp   nginx_app_1\na003badb8f4b        jc21/mariadb-aria:latest          \"/scripts/run.sh\"        2 days ago          Up 2 days             3306/tcp                                         nginx_db_1\n6656bd7cb9bf        b4bz/homer:latest                 \"/bin/sh /entrypoint\u2026\"   2 days ago          Up 37 hours           0.0.0.0:8080-&gt;8080/tcp                           confident_aryabhata\n790e9b22d6e7        portainer/portainer               \"/portainer\"             11 months ago       Up 2 days             0.0.0.0:8000-&gt;8000/tcp, 0.0.0.0:9000-&gt;9000/tcp   portainer\ndcb03666a82c        phpipam/phpipam-www:latest        \"/sbin/tini -- /bin/\u2026\"   11 months ago       Up 2 days             0.0.0.0:8081-&gt;80/tcp                             phpipam_phpipam-web_1\n2a7c79172329        phpipam/phpipam-cron:latest       \"/sbin/tini -- /bin/\u2026\"   11 months ago       Up 2 days             80/tcp                                           phpipam_phpipam-cron_1\n61fdc7e3bed9        mariadb:latest                    \"docker-entrypoint.s\u2026\"   11 months ago       Up 2 days             3306/tcp                                         phpipam_phpipam-mariadb_1\n</code></pre></p>"},{"location":"Dockertips/","title":"Docker Tips","text":"<p>To see offline containers     <pre><code>docker ps -a | grep Exit\n</code></pre></p>"},{"location":"Docker%20Containers/Code-server/","title":"Code-Server","text":""},{"location":"Docker%20Containers/Code-server/#why-do-i-run-this","title":"Why do I run this","text":"<p>This was a quick easy way to have a text editor without being SSH'd into my docker host constantly. I can donfigure my markdown documents, YML files etc all via a browser from anywhere in the world if I so choose. This is not currently publically available as I plan to do most things from home or on a VPN.</p>"},{"location":"Docker%20Containers/Code-server/#my-install","title":"My install","text":"<ol> <li>Make a directory for the code server to run from    <pre><code>mkdir code-server\n</code></pre></li> <li>Change to that directory <code>cd code-server</code></li> <li>Run the docker command below. Please note the <code>&lt;directory&gt;</code> needs to be set where you want it to have access. Also be sure to remove or set a differnet password than whats in the example.   <pre><code>docker run -d \\\n--name=code-server \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-e TZ=Europe/London \\\n-e PASSWORD=PasswordDUH `#optional` \\ \n-e HASHED_PASSWORD= `#optional` \\\n-e SUDO_PASSWORD=password `#optional` \\\n-e SUDO_PASSWORD_HASH= `#optional` \\\n-e PROXY_DOMAIN=code.brantlab.com `#optional` \\\n-p 8443:8443 \\\n-v /home/docker/code:/config \\\n-v '&lt;directory&gt;':'/config/&lt;directory&gt;':'rw'\\\n--restart unless-stopped \\\nghc\n</code></pre> Here is what I ran but yours may be different   <pre><code>docker run -d \\\n--name=code-server \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-e TZ=Europe/London \\\n-e PASSWORD=PasswordDUH `#optional` \\ \n-e HASHED_PASSWORD= `#optional` \\\n-e SUDO_PASSWORD=password `#optional` \\\n-e SUDO_PASSWORD_HASH= `#optional` \\\n-e PROXY_DOMAIN=code.brantlab.com `#optional` \\\n-p 8443:8443 \\\n-v /home/docker/code:/config \\\n-v '/home/docker/':'/config/homer':'rw'\\\n--restart unless-stopped \\\nghcr.io/linuxserver/code-server\n</code></pre></li> </ol>"},{"location":"Docker%20Containers/Code-server/#source","title":"Source","text":"<p>https://hub.docker.com/r/linuxserver/code-server</p>"},{"location":"Docker%20Containers/GoogleDDNS/","title":"Google DDNS","text":""},{"location":"Docker%20Containers/GoogleDDNS/#why-do-i-run-this","title":"Why do I run this?","text":"<p>I run this to update a dynamic DNS record for my home. I used to do this with PFsense but I have since decomissioned that for a USG pro that was donated to my homelab. This was a quick easy way to get the dynamic record up and working again with little fuss.</p>"},{"location":"Docker%20Containers/GoogleDDNS/#my-install","title":"My install","text":"<p>The command I ran to stand up the container. It took less than 30 seconds and dynamic DNS was going. <pre><code>docker run -v /etc/localtime:/etc/localtime -e USERNAME=&lt;USER&gt; -e PASSWORD=&lt;PASS&gt; -e HOSTNAME=&lt;DDNS DOMAIN&gt; -e INTERVAL=5m cwmr/google-domains-ddns\n</code></pre></p> <p>Steps for the commands</p> <ol> <li> <p>Create a google domains dynamic DNS record     </p> </li> <li> <p>Grab the Username and Password     </p> </li> <li> <p>Open a connection to your docker host and fill in your <code>&lt;DDNS Domain&gt; &lt;USER&gt; &lt;PASS&gt;</code> Example Below <pre><code>docker run -v /etc/localtime:/etc/localtime -e USERNAME=userthatexists -e PASSWORD=passthatdoesexist -e HOSTNAME=docs.brantlab.com -e INTERVAL=5m cwmr/google-domains-ddns\n</code></pre></p> </li> </ol>"},{"location":"Docker%20Containers/GoogleDDNS/#source","title":"Source","text":"<p>I used this project Here.</p>"},{"location":"Docker%20Containers/Homer/","title":"Homer","text":"<ul> <li>home.brantlab.com</li> </ul>"},{"location":"Docker%20Containers/Homer/#why-do-i-run-this","title":"Why do I run this?","text":"<p>Homer is a static genrated webpage based off YML file to generate the content on the page. This make a very easy dashboard to access services and easy to remember what I have. </p>"},{"location":"Docker%20Containers/Homer/#my-install","title":"My install","text":"<ol> <li> <p>I made a directory for the needed data to live in. </p> <pre><code>mkdir homer\n</code></pre> </li> <li> <p>Changed to the directory to run my docker commands</p> <pre><code>cd homer\n</code></pre> </li> <li> <p>Ran the docker command being sure to set the path where the assets will exist.</p> <pre><code>docker run -d \\\n    -p 8080:8080 \\\n    -v &lt;directory&gt;:/www/assets \\\n    --restart=always \\\n    b4bz/homer:latest\n</code></pre> <p>This is an example of what I ran but yours may be a bit different.</p> <pre><code>docker run -d \\\n    -p 8080:8080 \\\n    -v /home/docker/homer:/www/assets \\\n    --restart=always \\\n    b4bz/homer:latest\n</code></pre> </li> <li> <p>Go to your IP address for docker host like so http://172.16.10.19:8080</p> </li> </ol>"},{"location":"Docker%20Containers/Homer/#my-customizations-so-far","title":"My customizations so far","text":"<ul> <li>Link to the page https://home.brantlab.com </li> <li>Note that some links may not work because they are not public</li> <li><code>config.yml</code> <pre><code>---\n# Homepage configuration\n# See https://fontawesome.com/icons for icons options\n\ntitle: \"BrantLab\"\nsubtitle: \"Intranet\"\nlogo: \"assets/icons/logo_brantlab.png\"\n# icon: \"fas fa-skull-crossbones\" # Optional icon\n\nheader: true\nfooter: \"Brantlab.com\"\n\ncolumns: \"3\" # \"auto\" or number (must be a factor of 12: 1, 2, 3, 4, 6, 12)\nconnectivityCheck: true # whether you want to display a message when the apps are not accessible anymore (VPN disconnected for example)\n\n# Optional theme customization\ntheme: dark\ncolors:\n#  light:\n#    highlight-primary: \"#3367d6\"\n#    highlight-secondary: \"#4285f4\"\n#    highlight-hover: \"#5a95f5\"\n#    background: \"#f5f5f5\"\n#    card-background: \"#ffffff\"\n#    text: \"#363636\"\n#    text-header: \"#ffffff\"\n#    text-title: \"#303030\"\n#    text-subtitle: \"#424242\"\n#    card-shadow: rgba(0, 0, 0, 0.1)\n#    link-hover: \"#363636\"\n  dark:\n    highlight-primary: \"#2b2b2b\"\n    highlight-secondary: \"#131313\"\n    highlight-hover: \"#ff0000\"\n    background: \"#131313\"\n    card-background: \"#2b2b2b\"\n    text: \"#eaeaea\"\n    text-header: \"#f5f5f5\"\n    text-title: \"#fafafa\"\n    text-subtitle: \"#f5f5f5\"\n    card-shadow: rgba(0, 0, 0, 0.2)\n    link-hover: \"#ffdd57\"\n\n# Optional message\nmessage:\n  #url: https://b4bz.io\n  style: \"is-dark\" # See https://bulma.io/documentation/components/message/#colors for styling options.\n  title: \"Common Information for home network\"\n  content: \"Subnet: 172.16.10.0/24 &lt;br/&gt; Gateway: 172.16.10.1\"\n\n# Optional navbar\n# links: [] # Allows for navbar (dark mode, layout, and search) without any links\nlinks:\n  - name: \"vCenter\"\n    icon: \"fas fa-server\"\n    url: \"https://vcsa.brantlab.com\"\n    target: \"_blank\" # optional html a tag target attribute\n  - name: \"Wiki\"\n    icon: \"fas fa-book\"\n    url: \"https://www.wikipedia.org/\"\n  # this will link to a second homer page that will load config from additionnal-page.yml and keep default config values as in config.yml file\n  # see url field and assets/additionnal-page.yml.dist used in this example:\n  - name: \"another page!\"\n    icon: \"fas fa-file-alt\"\n    url: \"#sample\" \n\n# Services\n# First level array represent a group.\n# Leave only a \"items\" key if not using group (group name, icon &amp; tagstyle are optional, section separation will not be displayed).\nservices:\n  - name: \"Websites\"\n    icon: \"fas fa-cloud\"\n    items:\n      - name: \"Reddit Self-Hosted\"\n        logo: \"https://styles.redditmedia.com/t5_32hch/styles/communityIcon_b2t5inv46z331.png?width=256&amp;s=5d284561c13dd03558bf82907d5c7438b0eba1f6\"\n        subtitle: \"a place of goodness\"\n        url: \"https://www.reddit.com/r/selfhosted/\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Remote Access Console (RAC)\"\n        icon: \"fas fa-desktop\"\n        subtitle: \"Remote Access for internet based systems\"\n        url: \"https://rac.grunetworks.xyz/\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"GitHub\"\n        logo: \"https://image.flaticon.com/icons/png/512/25/25231.png\"\n        subtitle: \"Online Repo\"\n        url: \"https://github.com/Brantlab\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Google Domains\"\n        logo: \"https://cdn.freelogovectors.net/wp-content/uploads/2020/11/google-domains-logo.png\"\n        subtitle: \"The Best Registrar?\"\n        url: \"https://domains.google.com\"\n        target: \"_blank\" # optional html a tag target attribute\n\n  - name: \"HomeLab Apps\"\n    icon: \"fas fa-beer\"\n    items:\n      - name: \"Code\"\n        subtitle: \"VS Code Browser\"\n        url: \"http://code.brantlab.com\"\n        logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Visual_Studio_Code_1.35_icon.svg/1200px-Visual_Studio_Code_1.35_icon.svg.png\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Unifi Controller\"\n        subtitle: \"Unifi home controller\"\n        logo: \"https://cdn.iconscout.com/icon/free/png-512/ubiquiti-2752044-2284861.png\"\n        url: \"https://unifi.brantlab.com:8443\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Nginx Proxy\"\n        subtitle: \"Nginx Proxy Manager in docker\"\n        logo: \"https://img.icons8.com/color/452/nginx.png\"\n        url: \"http://proxy.brantlab.com\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"IPAM\"\n        subtitle: \"PHP IPAM\"\n        logo: \"https://pbs.twimg.com/profile_images/817486869147635712/p6CxwSmh_400x400.png\"\n        url: \"https://ipam.brantlab.com\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"PI Hole\"\n        subtitle: \"Block All The Things\"\n        logo: \"https://upload.wikimedia.org/wikipedia/commons/0/00/Pi-hole_Logo.png\"\n        url: \"http://172.16.10.9/admin\"\n        type: \"PiHole\" \n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Local Mesh Central\"\n        subtitle: \"For Home use\"\n        logo: \"https://png.pngitem.com/pimgs/s/15-151888_connecting-dots-sphere-png-connection-png-transparent-png.png\"\n        url: \"http://dc.brantlab.com\"\n        target: \"_blank\" # optional html a tag target attribute\n\n  - name: \"Physical Components\"\n    icon: \"fas fa-server\"\n    items:\n      - name: \"VCSA\"\n        subtitle: \"VCSA 6.7 U1\"\n        logo: \"https://www.definit.co.uk/images/2014/07/vSphereLogo.png\"\n        url: \"https://vcsa.brantlab.com\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"ESXI Host\"\n        subtitle: \"Single Host\"\n        logo: \"https://cdn.iconscout.com/icon/free/png-512/vmware-3-569535.png\"\n        url: \"http://172.16.10.20\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Synology\"\n        subtitle: \"NAS\"\n        #logo: \"https://cdn.iconscout.com/icon/free/png-512/vmware-3-569535.png\"\n        icon: \"fab fa-fort-awesome-alt\"\n        url: \"http://synology.brantlab.com\"\n        target: \"_blank\" # optional html a tag target attribute\n      - name: \"Printer\"\n        subtitle: \"Yuck\"\n        #logo: \"https://cdn.iconscout.com/icon/free/png-512/vmware-3-569535.png\"\n        #icon: \"fab fa-fort-awesome-alt\"\n        url: \"http://172.16.10.51\"\n        target: \"_blank\" # optional html a tag target attribute\n</code></pre></li> </ul>"},{"location":"Docker%20Containers/MKdocs/","title":"MkDocs and material","text":""},{"location":"Docker%20Containers/MKdocs/#why-do-i-run-this","title":"Why do I run this?","text":"<p>I run MKdocs on material to make hte best attempt at taking notes while I deploy things and that way I can remember what I did. This is a beautiful customized interface that allows me to pump out notes and easily review them like a wiki. </p>"},{"location":"Docker%20Containers/MKdocs/#my-install","title":"My install","text":"<ol> <li> <p>Made a directory to retain all my docs </p> <pre><code>mkdir mkdocs\n</code></pre> </li> <li> <p>Changed into that directory <pre><code>cd mkdocs\n</code></pre></p> </li> <li> <p>Ran this command to download the image <pre><code>docker pull squidfunk/mkdocs-material\n</code></pre></p> </li> <li> <p>Followed up with this to create the container and start creating <pre><code> sudo docker run --rm -it -p 8000:8001 -v \"$(PWD):/docs\" squidfunk/mkdocs-material --restart unless-stopped redis\n</code></pre></p> </li> <li> <p>Once this I started customiztion with the help of this site</p> </li> </ol>"},{"location":"Docker%20Containers/MKdocs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Docker%20Containers/MKdocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Docker%20Containers/MKdocs/#source","title":"Source","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"Docker%20Containers/TacticalRMM/","title":"Tactical RMM","text":""},{"location":"Docker%20Containers/TacticalRMM/#why","title":"Why","text":""},{"location":"Docker%20Containers/TacticalRMM/#install","title":"Install","text":"<p>docker@docker2:~$ mkdir tactical docker@docker2:~$ cd tactical</p>"},{"location":"Physical%20Infrastructure/ESXI1/","title":"ESXI Host 1","text":""},{"location":"Physical%20Infrastructure/ESXI1/#why-do-i-run-this","title":"Why do I run this","text":"<p>This was one of my first \"current\" gen lab hosts. It has served me well for the last 5 years being an absolute unit of a machine. It has ran flawlessly during this time and continues to do so. I came from a blade system which just seemed to slurp the power down. This r710 drinks small little drinks and costs less than a dollar a day to run with its current work load. </p>"},{"location":"Physical%20Infrastructure/ESXI1/#specs","title":"Specs","text":"<pre><code>Manufacturer    Dell Inc.\nModel   PowerEdge R710\nCPU \nLogical processors  16\nProcessor type  Intel(R) Xeon(R) CPU E5640 @ 2.67GHz\nSockets 2\nCores per socket    4\nHyperthreading  Yes, enabled\nMemory  127.99 GB\n</code></pre> <p>Local storage for the most part <pre><code>| Name              | Drive Type | Capacity  | Provisioned | Free      | Type  | Thin provisioning | Access |\n|-------------------|------------|-----------|-------------|-----------|-------|-------------------|--------|\n| FAST!             | SSD        | 931.25 GB | 394.16 GB   | 537.09 GB | VMFS6 | Supported         | Single |\n| Slave 1 - Backups | Non-SSD    | 1.36 TB   | 23.75 GB    | 1.34 TB   | VMFS6 | Supported         | Single |\n| Slave 1 - Drive 1 | Non-SSD    | 1.82 TB   | 1.06 TB     | 779 GB    | VMFS6 | Supported         | Single |\n| Slave 1 - Drive 2 | Non-SSD    | 1.82 TB   | 232.76 GB   | 1.59 TB   | VMFS5 | Supported         | Single |\n</code></pre></p>"},{"location":"Physical%20Infrastructure/USG/","title":"USG Pro","text":""},{"location":"Physical%20Infrastructure/USG/#why-do-i-run-this","title":"Why do I run this","text":"<p>It was donated into my lab by a real good friend of mine. This is mostly spousal approval factor so that way I don't take the net down anytime I wanted to do host maintenance. I used to run a virualized PFsense firewall and this firewall has many of its capabilties but not quite all of them. I am still pretty happy with the results thus far. </p>"},{"location":"Physical%20Infrastructure/USG/#model","title":"Model","text":"<p>USG-Pro-4</p>"},{"location":"Physical%20Infrastructure/USG/#this-is-all-you-get","title":"This is all you get","text":"<p>There really isn't much more info I can give you about this device without feeling like I am giving someone more info to infiltrate my network.</p>"},{"location":"Powershell%20Stuff/IAR_Heart/","title":"IAR Heartbeat","text":"<p>This Script tests to see if IAR is running and if not it will log it and restart it. </p> <pre><code>$Source = \"E:\\Recordings\\TwoToneDetect73f\\logfiles\\heartbeat.log\"\n$application = \"E:\\Recordings\\TwoToneDetect73f\\TwoToneDetect73f.exe\"\n$LogFile = \"E:\\Recordings\\TwoToneDetect73f\\logfiles\\crashes.txt\"\n$File = Get-ItemProperty -Path $source -Name LastWriteTime\n$Date = Get-Date -Format \"MM/dd/yyyy HH:mm:ss\"\n$Crashed1 = $date + \" - Applcation wasn't running and we restarted it\"\n$Crashed2 = $date + \" - Applcation was running but stalled and we restarted it\"\n\n$Currenttime =  (Get-date).Addminutes(-2)\nIf ($file.LastWriteTime -gt $Currenttime ){\n    write-host \"Application is all fine\"\n}else{\n    write-host \"Application isn't fine\"\n    $Two = Get-process -name \"TwoToneDetect73f\" -ErrorAction SilentlyContinue\n    if ($two -eq $null){\n        write-host \"Two Tone Detect isn't running....\"\n        write-host \"Starting Two Tone Detect\"\n        Start-Process -FilePath $application\n        Add-Content -Path $LogFile -Value $Crashed1 -PassThru\n    }else{\n        write-host \"Two Tone Detect is running....\"\n        write-host \"Stopping Two Tone Detect....\"\n        $two | stop-service\n        write-host \"Starting Two Tone Detect\"\n        Start-Process -FilePath $application\n        Add-Content -Path $LogFile -Value $Crashed2 -PassThru\n    }\n}\n</code></pre>"}]}